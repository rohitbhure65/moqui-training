<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <!-- Fetch records by trainingId and trainingName -->
    <service verb="find" noun="MoquiTraining">
        <in-parameters>
            <parameter name="trainingName"/>
            <parameter name="trainingId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="MoquiTraining" list="trainingList">
                <econditions combine="or">
                    <econdition field-name="trainingId" ignore-if-empty="true"/>
                    <econdition field-name="trainingName" operator="like" ignore-case="true" ignore-if-empty="true"/>
                </econditions>
                <select-field field-name="trainingId,trainingName,trainingDate"/>
            </entity-find>
            <log level="info" message="fetched MoquiTraining Data ${trainingList}"/>
        </actions>
    </service>

    <!-- create & update using store verb MoquiTraining records -->
    <service verb="store" noun="MoquiTraining">
        <in-parameters>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" format="MM/dd" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="MoquiTraining" list="MoquiTrainingList">
                <econdition field-name="trainingName" ignore-case="true" ignore-if-empty="false"/>
            </entity-find>
            <if condition="MoquiTrainingList">
                <then>
                    <set field="MoquiTraining" from="MoquiTrainingList.first"/>
                    <entity-set value-field="MoquiTraining" map="context"/>
                    <entity-update value-field="MoquiTraining"/>
                    <set field="trainingID" from="trainingId"/>
                    <log level="info" message="update existing moqui training record"/>
                </then>
                <else>
                    <service-call name="create#MoquiTraining" in-map="context" out-map="context"/>
                    <log level="info" message="create new moqui training record"/>
                </else>
            </if>
        </actions>
    </service>
</services>